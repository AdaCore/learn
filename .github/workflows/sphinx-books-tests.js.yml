name: Sphinx Books Tests

on: [push, pull_request]

defaults:
  run:
    working-directory: frontend

jobs:
  sphinx-books:

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        python-version: ['3.11']
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v2
    - name: Enable Corepack
      run: corepack enable
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Install OS Deps
      run: |
        sudo apt-get update && \
        sudo apt-get install -y \
        graphviz \
        plantuml \
        texlive-latex-base \
        texlive-latex-recommended \
        texlive-latex-extra \
        texlive-fonts-recommended \
        texlive-fonts-extra \
        latexmk \
        texlive-xetex \
        fonts-lmodern \
        fonts-open-sans \
        fonts-dejavu \
        poppler-utils
    - name: Install GNAT FSF
      run: |
        sudo mkdir -p /opt/ada/default
        sudo mkdir -p /opt/ada/selected
        gnat_version=("12.2.0-1" "14.1.0-3")
        sudo mkdir /opt/ada/gnat
        for tool_version in ${gnat_version[@]}; do
            echo Installing GNAT $tool_version
            sudo wget -O gnat.tar.gz https://github.com/alire-project/GNAT-FSF-builds/releases/download/gnat-${tool_version}/gnat-x86_64-linux-${tool_version}.tar.gz && \
            sudo tar xzf gnat.tar.gz && \
            sudo mv gnat-* /opt/ada/gnat/${tool_version} && \
            sudo rm *.tar.gz
        done
        sudo echo "/opt/ada/default/gnat/bin" >> $GITHUB_PATH
        sudo echo "/opt/ada/selected/gnat/bin" >> $GITHUB_PATH
        gnat_prove_version=("12.1.0-1" "14.1.0-1")
        sudo mkdir /opt/ada/gnatprove
        for tool_version in ${gnat_prove_version[@]}; do
            echo Installing GNATprove $v
            sudo wget -O gnatprove.tar.gz https://github.com/alire-project/GNAT-FSF-builds/releases/download/gnatprove-${tool_version}/gnatprove-x86_64-linux-${tool_version}.tar.gz && \
            sudo tar xzf gnatprove.tar.gz && \
            sudo mv gnatprove-* /opt/ada/gnatprove/${tool_version} && \
            sudo rm *.tar.gz
        done
        sudo echo "/opt/ada/default/gnatprove/bin" >> $GITHUB_PATH
        sudo echo "/opt/ada/selected/gnatprove/bin" >> $GITHUB_PATH
        gprbuild_version=("22.0.0-1" "24.0.0-1")
        sudo mkdir /opt/ada/gprbuild
        for tool_version in ${gprbuild_version[@]}; do
            echo Installing GPRbuild $v
            sudo wget -O gprbuild.tar.gz https://github.com/alire-project/GNAT-FSF-builds/releases/download/gprbuild-${tool_version}/gprbuild-x86_64-linux-${tool_version}.tar.gz && \
            sudo tar xzf gprbuild.tar.gz && \
            sudo mv gprbuild-* /opt/ada/gprbuild/${tool_version} && \
            sudo rm *.tar.gz
        done
        sudo echo "/opt/ada/default/gprbuild/bin" >> $GITHUB_PATH
        sudo echo "/opt/ada/selected/gprbuild/bin" >> $GITHUB_PATH
        sudo ln -sf /opt/ada/gnat/12.2.0-1      /opt/ada/default/gnat
        sudo ln -sf /opt/ada/gnatprove/12.1.0-1 /opt/ada/default/gnatprove
        sudo ln -sf /opt/ada/gprbuild/22.0.0-1  /opt/ada/default/gnatprove
        sudo chmod -R ugo+w /opt/ada/selected
    - name: Increase max user watches
      run: |
        echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && \
        sudo sysctl -p
    - name: Install dependencies
      run: yarn --immutable
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Webpack production
      run: make cleanall webpack-production
    - name: Run SPHINX content tests
      run: make -k HIDDEN_BOOKS="" HIDDEN_CONTENTS="" test_all_content
    - name: Build PDF books including build/runtime output
      run: make HIDDEN_BOOKS="" HIDDEN_CONTENTS="" pdf_books
    - name: Archive PDF books in artifact
      uses: actions/upload-artifact@v2
      with:
        name: learn-pdf-books
        path: |
          frontend/dist/pdf_books
        retention-days: 1
    - name: Build EPUB books including build/runtime output
      run: make HIDDEN_BOOKS="" HIDDEN_CONTENTS="" epub_books
    - name: Archive EPUB books in artifact
      uses: actions/upload-artifact@v2
      with:
        name: learn-epub-books
        path: |
          frontend/dist/epub_books
        retention-days: 1
